name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # gcc
          - os: ubuntu-22.04
            cc: gcc
            cxx: g++
            is_clang: false

          # clang
          # temp fix: v21.0.0 bugged with gtest parametrized tests
          - os: ubuntu-22.04
            cc: /usr/bin/clang
            cxx: /usr/bin/clang++
            is_clang: true

    steps:
      - uses: actions/checkout@v5

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y git gcc g++ pkg-config cmake libmosquitto-dev libssl-dev libdbus-1-dev libglib2.0-dev libavahi-client-dev ninja-build python3-venv python3-dev python3-pip unzip libgirepository1.0-dev libcairo2-dev libreadline-dev default-jre

      - name: Setup project dependencies
        run: git submodule update --init

      - name: Setup CHIP dependencies
        working-directory: third_party/connectedhomeip
        run: scripts/checkout_submodules.py --shallow --platform linux

      - name: Cache protoc
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-build-protoc
          path: third_party/protobuf/bin/protoc

      - name: Cache CHIP pigweed
        id: pigweed-cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-build-pigweed-${{ hashFiles('third_party/connectedhomeip/scripts/setup/requirements*.txt', 'third_party/connectedhomeip/third_party/pigweed/repo/package-lock.json') }}
          path: third_party/connectedhomeip/.environment

      - name: Bootstrap CHIP
        working-directory: third_party/connectedhomeip
        env:
          PW_NO_CIPD_CACHE_DIR: 1
        run: source scripts/bootstrap.sh -p all,linux

      - name: Configure GN
        run: gn gen out/build --args='is_debug=false custom_toolchain="custom" is_clang=${{ matrix.is_clang }} target_cc="${{ matrix.cc }}" target_cxx="${{ matrix.cxx }}" target_ar="ar"'

      - name: Compiler version
        run: ${{ matrix.cxx }} --version

      - name: Build mobmatter
        run: ninja -C out/build

      - name: Build tests
        run: ninja -C out/build tests

      - name: Run tests
        run: out/build/tests
