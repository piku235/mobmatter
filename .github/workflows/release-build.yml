name: Release Build (mips-24kec)

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      OPENWRT_VERSION: "24.10.3"
      GCC_VERSION: "13.3.0"
      MAIN_TARGET: "ramips"
      SUB_TARGET: "mt76x8"
      ARCH: "mipsel_24kc"

    steps:
      - uses: actions/checkout@v5

      - name: Common strings
        id: strings
        shell: bash
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          echo "version=${VERSION#v}" >> "$GITHUB_OUTPUT"

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y git gcc g++ pkg-config cmake libssl-dev libdbus-1-dev libglib2.0-dev libavahi-client-dev ninja-build python3-venv python3-dev python3-pip unzip libgirepository1.0-dev libcairo2-dev libreadline-dev default-jre

      - name: Setup project dependencies
        run: git submodule update --init

      - name: Download OpenWRT toolchain
        run: |
          wget -q https://downloads.openwrt.org/releases/${OPENWRT_VERSION}/targets/${MAIN_TARGET}/${SUB_TARGET}/openwrt-toolchain-${OPENWRT_VERSION}-${MAIN_TARGET}-${SUB_TARGET}_gcc-${GCC_VERSION}_musl.Linux-x86_64.tar.zst
          tar -xf openwrt-toolchain-${OPENWRT_VERSION}-${MAIN_TARGET}-${SUB_TARGET}_gcc-${GCC_VERSION}_musl.Linux-x86_64.tar.zst
          mv openwrt-toolchain-${OPENWRT_VERSION}-${MAIN_TARGET}-${SUB_TARGET}_gcc-${GCC_VERSION}_musl.Linux-x86_64 openwrt-toolchain

      - name: Download target sysroot
        run: |
          TARGET_SYSROOT_URL=$(curl -s https://api.github.com/repos/piku235/mobilus-gtw-runtime/releases/latest | jq -r '.assets[] | select(.name=="target-sysroot.tar.gz") | .browser_download_url')
          wget -q "$TARGET_SYSROOT_URL"
          tar -xf target-sysroot.tar.gz

      - name: Export OpenWRT
        run: |
          TOOLCHAIN="toolchain-${ARCH}_gcc-${GCC_VERSION}_musl"
          echo "PATH=${PWD}/openwrt-toolchain/$TOOLCHAIN/bin:$PATH" >> $GITHUB_ENV
          echo "STAGING_DIR=${PWD}/openwrt-toolchain/$TOOLCHAIN" >> $GITHUB_ENV
          echo "OPENWRT_SYSROOT_DIR=${PWD}/target-sysroot" >> $GITHUB_ENV

      - name: Setup CHIP dependencies
        working-directory: third_party/connectedhomeip
        run: scripts/checkout_submodules.py --shallow --platform linux

      - name: Cache protoc
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-build-protoc
          path: third_party/protobuf/bin/protoc

      - name: Cache CHIP pigweed
        id: pigweed-cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-build-pigweed-${{ hashFiles('third_party/connectedhomeip/scripts/setup/requirements*.txt', 'third_party/connectedhomeip/third_party/pigweed/repo/package-lock.json') }}
          path: third_party/connectedhomeip/.environment

      - name: Bootstrap CHIP
        working-directory: third_party/connectedhomeip
        env:
          PW_NO_CIPD_CACHE_DIR: 1
        run: source scripts/bootstrap.sh -p all,linux

      - name: Configure GN
        run: |
          source third_party/connectedhomeip/scripts/activate.sh
          gn gen out/target --args='import("//build/target.gni")'

      - name: Build mobmatter
        run: third_party/connectedhomeip/scripts/run_in_build_env.sh "ninja -C out/target"

      - name: Make target
        run: |
          mkdir -p target/.pkg
          mkdir -p target/bin
          mkdir -p target/etc/init.d
          cp -a out/target/mobmatter target/bin
          cp -a packaging/mobmatter.conf target/etc
          cp -a packaging/mobmatter.initd.template target/etc/init.d/mobmatter.template
          echo "${{ steps.strings.outputs.version }}" > target/.pkg/version
          cp -a packaging/conffiles target/.pkg
          cp -a packaging/postinst target/.pkg
          cp -a packaging/prerm target/.pkg

      - name: Build package
        run: tar --owner=0 --group=0 -czf mobmatter.jpk -C target .

      - name: Upload
        uses: softprops/action-gh-release@v2
        with:
          files: mobmatter.jpk
